- id: '1644549022540'
  alias: Home - Action - Evening (Late)
  description: ''
  trigger:
  - platform: time
    at: '22:00:00'
  condition: []
  action:
  - alias: Actions to do if someone is home
    if:
    - condition: template
      value_template: '{{ states("input_select.home_occupancy") in ["Home", "Guest"]
        }}'
    then:
    - service: alarm_control_panel.alarm_arm_home
      data: {}
      target:
        entity_id: alarm_control_panel.home_alarm_control_panel_alarm_control_panel
    - service: climate.set_preset_mode
      target:
        entity_id: climate.living_room
      data:
        preset_mode: Sleep
  - alias: Actions to do if no one is home
    if:
    - condition: template
      value_template: '{{ states("input_select.home_occupancy") in ["Away"] }}'
    then:
    - service: alarm_control_panel.alarm_arm_away
      data: {}
      target:
        entity_id: alarm_control_panel.home_alarm_control_panel_alarm_control_panel
    - condition: state
      entity_id: alarm_control_panel.home_alarm_control_panel_alarm_control_panel
      state: disarmed
    - service: alarm_control_panel.alarm_arm_away
      data: {}
      target:
        entity_id: alarm_control_panel.home_alarm_control_panel_alarm_control_panel
  mode: single
- id: '1644569882133'
  alias: Home - Action - Morning (Early)
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: '-30'
    alias: 30 min before sunrise
  condition: []
  action:
  - alias: Actions to do if someone is home
    if:
    - condition: template
      value_template: '{{ states("input_select.home_occupancy") in ["Home", "Guest"]
        }}'
      alias: Check to see if home is occupied
    then:
    - service: cover.set_cover_position
      data:
        position: 50
      target:
        entity_id: cover.living_room_shades
      alias: Open the living room shades
    - service: alarm_control_panel.alarm_disarm
      data: {}
      target:
        entity_id: alarm_control_panel.home_alarm_control_panel_alarm_control_panel
      alias: Turn off the alarm
    - service: ecobee.resume_program
      data:
        resume_all: true
        entity_id: climate.living_room
  - alias: Actions to do if no one is home
    if:
    - condition: template
      value_template: '{{ states("input_select.home_occupancy") in ["Away"] }}'
    then:
    - service: cover.close_cover
      data: {}
      target:
        entity_id: cover.living_room_shades
  mode: single
- id: '1644905742835'
  alias: MQTT - Gym - Lights Button
  description: ''
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Gym Button
    payload: press
    value_template: '{{ value_json.action }}'
  condition: []
  action:
  - service: light.toggle
    data: {}
    target:
      entity_id: light.gym
  mode: single
- id: '1646099971103'
  alias: MQTT - Amit's Office - Lights Button
  description: ''
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Amit's Office Button
    payload: press
    value_template: '{{ value_json.action }}'
  condition: []
  action:
  - service: light.toggle
    data: {}
    target:
      entity_id: light.upstair_s_office
  mode: single
- id: '1648092253420'
  alias: Home - Action -  Evening (Early)
  description: ''
  trigger:
  - platform: sun
    event: sunset
  condition: []
  action:
  - alias: Actions to do if someone is home
    if:
    - condition: template
      value_template: '{{ states("input_select.home_occupancy") in ["Home", "Guest"]
        }}'
    then:
    - service: cover.close_cover
      data: {}
      target:
        entity_id: cover.living_room_shades
  mode: single
- id: '1648433962952'
  alias: MQTT - Master Bathroom - Lights Switch
  description: ''
  use_blueprint:
    path: jerelabs/zwave-js-inovelli-lzw31-sn-red-series-dimmer.yaml
    input:
      inovelli_switch: 38f47cfb5deb31095d26375922c49ae8
      button_a:
      - service: light.turn_on
        data:
          brightness_pct: 100
          kelvin: 2600
        target:
          entity_id: light.master_bathroom_lights
      - service: switch.turn_on
        data: {}
        target:
          entity_id:
          - switch.master_bath_fan
          - switch.master_bathroom_tub_switch
      button_b:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.master_bathroom_lights
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.master_bath_fan
          - switch.master_bathroom_tub_switch
      button_a2:
      - service: scene.turn_on
        target:
          entity_id: scene.master_bathroom_relax
        metadata: {}
- id: '1649170382940'
  alias: Laundry - Washing Machine Timer
  description: Start the timer for how long the washing machine is running.
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Washing Machine Button
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json.action == "single" }}'
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.washing_machine
      - service: input_datetime.set_datetime
        data:
          datetime: '{{ now() }}'
        target:
          entity_id: input_datetime.washing_machine
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.washing_machine_plug
    - conditions:
      - condition: template
        value_template: '{{ trigger.payload_json.action == "double" }}'
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.washing_machine
    default: []
  mode: single
- id: '1651621760847'
  alias: MQTT - Stairway - Motion Sensor
  description: ''
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Stairway Motion Sensor
    payload: true
    value_template: '{{ value_json.occupancy }}'
  condition: []
  action:
  - service: scene.create
    data:
      scene_id: stairway_current
      snapshot_entities: light.stairs_main_lights
  - service: light.turn_on
    data:
      brightness_pct: 30
    target:
      entity_id: light.stairs_main_lights
  - wait_for_trigger:
    - platform: mqtt
      topic: zigbee2mqtt/Stairway Motion Sensor
      payload: false
      value_template: '{{ value_json.occupancy }}'
    timeout: 00:01:00
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.stairway_current
  mode: single
- id: '1651640832411'
  alias: MQTT - Master Bedroom - Nightstand Button
  description: ''
  use_blueprint:
    path: Drafted/aqara-buttons-all-in-one-zigbee2mqtt.yaml
    input:
      action_sensor: sensor.master_bedroom_button_action
      single_action:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.master_bedroom_nightstands
- id: '1651717873032'
  alias: Home Assistant Backup
  description: ''
  trigger:
  - platform: time
    at: 02:00:00
  condition: []
  action:
  - service: backup.create
    data: {}
  mode: single
- id: '1681591143284'
  alias: Birthday Reminder
  description: ''
  trigger:
  - platform: calendar
    event: start
    offset: -0:0:0
    entity_id: calendar.birthdays
  condition: []
  action:
  - service: notify.mobile_app_pixel_7_pro
    data:
      message: '{{ trigger.calendar_event.summary }} is today!'
      title: Birthday Reminder
      data:
        ttl: 0
        priority: high
  mode: single
- id: '1683383421044'
  alias: Workout Reminder
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: 0
  condition:
  - condition: template
    value_template: '{{ states.activity_manager | selectattr(''attributes.category'',
      ''equalto'', ''Workout'') | map(attribute=''state'') | map(''as_datetime'')
      | reject(">", now()) | list | count > 0 }}'
  action:
  - service: notify.mobile_app_pixel_7_pro
    data:
      title: 'Workout reminder{% if (states.activity_manager | selectattr(''attributes.category'',
        ''equalto'', ''Workout'') | map(attribute=''state'') | map(''as_datetime'')
        | reject(">", now()) | list | count > 1)%}s{% endif %} '
      message: '{{ "Remember to stay healthy and go do: " }} {%- set new_line = joiner("<br
        />") %} <br /> {%- for activity in states.activity_manager -%} {%- if activity.state|as_datetime
        < now() and activity.attributes.category=="Workout"  -%} {{ new_line() }}{{
        " - "}}{{  activity.name }} {%- endif -%} {%- endfor %}'
      data:
        priority: high
        ttl: 0
        importance: high
        notification_icon: mdi:dumbbell
  mode: single
- id: '1701032576587'
  alias: Home - Change Mode to Away
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.home_occupancy
    to: Away
    from: Home
  - platform: state
    entity_id:
    - input_select.home_occupancy
    to: Away
    from: Guest
  condition: []
  action:
  - service: tts.cloud_say
    data:
      cache: false
      entity_id: media_player.home_speakers
      message: The home is going into away mode. The lights will be turned off, the
        alarm set to away, and the thermostat set to away.
    alias: Announcement
  - service: light.turn_off
    data:
      entity_id: all
    alias: Turn off all the lights
  - service: climate.set_preset_mode
    data:
      preset_mode: Away
    target:
      entity_id: climate.living_room
    alias: Set thermostate to Away
  - service: alarm_control_panel.alarm_arm_away
    data: {}
    target:
      entity_id: alarm_control_panel.home_alarm_control_panel_alarm_control_panel
    alias: Arm alarm (away mode)
  - service: cover.close_cover
    data: {}
    target:
      entity_id:
      - cover.living_room_shades
      - cover.media_room_shade_bottom_up
      - cover.media_room_shades_top_down
    alias: Close shades
  mode: single
- id: '1701032790455'
  alias: Home - Change Mode to Home/Guest
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.home_occupancy
    to: Home
    from: Away
  - platform: state
    entity_id:
    - input_select.home_occupancy
    to: Guest
    from: Away
  condition: []
  action:
  - service: tts.cloud_say
    data:
      cache: false
      entity_id: media_player.home_speakers
      message: The home is coming back to home mode. Some lights will be turned on,
        the alarm set to home, and the thermostat set to home.
    alias: Announcement
  - service: ecobee.resume_program
    data:
      resume_all: true
      entity_id: climate.living_room
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: alarm_control_panel.home_alarm_control_panel_alarm_control_panel
        state: disarmed
    then:
    - service: alarm_control_panel.alarm_disarm
      data: {}
      target:
        entity_id: alarm_control_panel.home_alarm_control_panel_alarm_control_panel
  - if:
    - condition: sun
      before: sunset
      after: sunrise
    then:
    - service: cover.set_cover_position
      data:
        position: 50
      target:
        entity_id: cover.living_room_shades
    alias: Daytime Actions
  - if:
    - condition: sun
      before: sunrise
      after: sunset
    then:
    - service: light.turn_on
      data: {}
      target:
        entity_id:
        - light.front_porch_overhead_light
        - light.front_foyer_main_lights
        - light.living_room_main_lights
        - light.breakfast_room_main_lights
        - light.kitchen
    alias: Night Time Actions
  mode: single
- id: '1702273468253'
  alias: YouTube Search
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_button.youtube_search
  condition: []
  action:
  - service: ytube_music_player.search
    data:
      limit: 20
      entity_id: media_player.youtube_living_room_display
      query: '{{ states(''input_text.youtube_search'') }}'
  mode: single
